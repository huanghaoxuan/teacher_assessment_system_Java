<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TeacheringworkExperimentalpracticeteachingMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.TeacheringworkExperimentalpracticeteaching">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="classTeacher" jdbcType="NVARCHAR" property="classTeacher"/>
        <result column="status" jdbcType="NVARCHAR" property="status"/>
        <result column="name" jdbcType="NVARCHAR" property="name"/>
        <result column="character" jdbcType="NVARCHAR" property="character"/>
        <result column="allTime" jdbcType="DECIMAL" property="allTime"/>
        <result column="weekTime" jdbcType="DECIMAL" property="weekTime"/>
        <result column="studentNumber" jdbcType="INTEGER" property="studentNumber"/>
        <result column="parallelClassesNumber" jdbcType="INTEGER" property="parallelClassesNumber"/>
        <result column="groupingPerClassNumber" jdbcType="INTEGER" property="groupingPerClassNumber"/>
        <result column="instructorsNumber" jdbcType="INTEGER" property="instructorsNumber"/>
        <result column="experimentType" jdbcType="NVARCHAR" property="experimentType"/>
        <result column="reportsNumber" jdbcType="INTEGER" property="reportsNumber"/>
        <result column="correctionsNumber" jdbcType="INTEGER" property="correctionsNumber"/>
        <result column="note" jdbcType="INTEGER" property="note"/>
        <result column="year" jdbcType="INTEGER" property="year"/>
        <result column="semester" jdbcType="INTEGER" property="semester"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacheringWork_experimentalPracticeTeaching
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.demo.model.TeacheringworkExperimentalpracticeteaching">
    insert into teacheringWork_experimentalPracticeTeaching (classTeacher, status,
      name, character, allTime, 
      weekTime, studentNumber, parallelClassesNumber, 
      groupingPerClassNumber, instructorsNumber, 
      experimentType, reportsNumber, correctionsNumber, 
      note, year, semester
      )
    values (#{classTeacher,jdbcType=NVARCHAR}, #{status,jdbcType=NVARCHAR},
      #{name,jdbcType=NVARCHAR}, #{character,jdbcType=NVARCHAR}, #{allTime,jdbcType=DECIMAL}, 
      #{weekTime,jdbcType=DECIMAL}, #{studentNumber,jdbcType=INTEGER}, #{parallelClassesNumber,jdbcType=INTEGER}, 
      #{groupingPerClassNumber,jdbcType=INTEGER}, #{instructorsNumber,jdbcType=INTEGER}, 
      #{experimentType,jdbcType=NVARCHAR}, #{reportsNumber,jdbcType=INTEGER}, #{correctionsNumber,jdbcType=INTEGER}, 
      #{note,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{semester,jdbcType=INTEGER}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.TeacheringworkExperimentalpracticeteaching">
    update teacheringWork_experimentalPracticeTeaching
    set classTeacher = #{classTeacher,jdbcType=NVARCHAR},
      status = #{status,jdbcType=NVARCHAR},
      name = #{name,jdbcType=NVARCHAR},
      character = #{character,jdbcType=NVARCHAR},
      allTime = #{allTime,jdbcType=DECIMAL},
      weekTime = #{weekTime,jdbcType=DECIMAL},
      studentNumber = #{studentNumber,jdbcType=INTEGER},
      parallelClassesNumber = #{parallelClassesNumber,jdbcType=INTEGER},
      groupingPerClassNumber = #{groupingPerClassNumber,jdbcType=INTEGER},
      instructorsNumber = #{instructorsNumber,jdbcType=INTEGER},
      experimentType = #{experimentType,jdbcType=NVARCHAR},
      reportsNumber = #{reportsNumber,jdbcType=INTEGER},
      correctionsNumber = #{correctionsNumber,jdbcType=INTEGER},
      note = #{note,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      semester = #{semester,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, classTeacher, status, name, character, allTime, weekTime, studentNumber, 
    parallelClassesNumber, groupingPerClassNumber, instructorsNumber, experimentType, 
    reportsNumber, correctionsNumber, note, year, semester
    from teacheringWork_experimentalPracticeTeaching
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
   SELECT * FROM teacheringWork_experimentalPracticeTeaching
  </select>
    <select id="selectByClassTeacher" parameterType="com.example.demo.model.TeacheringworkExperimentalpracticeteaching"
            resultMap="BaseResultMap">
        SELECT * FROM teacheringWork_experimentalPracticeTeaching WHERE 1=1
        AND classTeacher=#{classTeacher,jdbcType=NVARCHAR}
        <if test="year!=null and year!=''">
            AND year=#{year,jdbcType=INTEGER}
        </if>
    </select>
</mapper>